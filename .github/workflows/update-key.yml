name: BigLinux Update Key

# Controls when the workflow will run
on:
  schedule:
    - cron:  '30 1 * * *'
  push:
    #branches: [ "master", "main", "*" ]
    branches: [ "*" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - id: install-build-dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install \
          build-essential \
          cmake \
          git \
          libarchive-dev \
          libarchive-tools \
          libcurl4-openssl-dev \
          libgpgme-dev \
          libssl-dev \
          zip \
          python3-pip
          sudo pip3 install meson
          sudo pip3 install ninja
      
      - name: install pacman
        shell: bash
        env:
          PACMAN_VERSION: 6.0.1
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
          sudo wget https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
          sudo tar -xvf pacman-${PACMAN_VERSION}.tar.xz
          pushd pacman-${PACMAN_VERSION}
          sudo patch -p1 -i ../pacman-sync-first-option.patch
          sudo meson --prefix=/usr \
                      --buildtype=plain \
                      -Ddoc=disabled \
                      -Ddoxygen=enabled \
                      -Dscriptlet-shell=/usr/bin/bash \
                      -Dldconfig=/usr/bin/ldconfig \
                      build
          sudo meson compile -C build
          sudo meson install -C build
          popd
          sudo install -m644 pacman.conf /etc/pacman.conf
          sudo install -m644 makepkg.conf /etc/
          sudo mkdir -p /etc/pacman.d
          sudo touch /etc/pacman.d/mirrorlist
          popd
          sudo rm -rf pacman
          
          #add biglinux repository
          sudo sed -i '/\[core\]/{h;s/.*/\[biglinux-update-stable\]/;p;x;}' /etc/pacman.conf
          sudo sed -i '/\[core\]/{h;s/.*/SigLevel = PackageRequired/;p;x;}' /etc/pacman.conf
          sudo sed -i '/\[core\]/{h;s/.*/Server = https:\/\/repo.biglinux.com.br\/update-stable\/$arch/;p;x;}' /etc/pacman.conf
          sudo sed -i '/\[core\]/{h;s/.*//;p;x;}' /etc/pacman.conf
          echo '
          [biglinux-testing]
          SigLevel = PackageRequired
          Server = https://repo.biglinux.com.br/testing/$arch' | sudo tee -a /etc/pacman.conf
          echo '
          [biglinux-stable]
          SigLevel = PackageRequired
          Server = https://repo.biglinux.com.br/stable/$arch' | sudo tee -a /etc/pacman.conf
            
      - name: install keyrings
        shell: bash
        run: |
          sudo install -dm755 /usr/share/pacman/keyrings/
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/manjaro-keyring.git
          pushd manjaro-keyring
            sudo install -m0644 manjaro.gpg /usr/share/pacman/keyrings/
            sudo install -m0644 manjaro-trusted /usr/share/pacman/keyrings/
            sudo install -m0644 manjaro-trusted /usr/share/pacman/keyrings/
          popd
          sudo rm -rf manjaro-keyring
          mkdir -p archlinux-keyring
          pushd archlinux-keyring
            wget https://archlinux.org/packages/core/any/archlinux-keyring/download -O /tmp/archlinux-keyring.tar.zst
            tar --use-compress-program=unzstd --strip-components=4 --wildcards -xvf /tmp/archlinux-keyring.tar.zst usr/share/pacman/keyrings/*
            sudo install -m0644 archlinux.gpg /usr/share/pacman/keyrings/
            sudo install -m0644 archlinux-trusted /usr/share/pacman/keyrings/
            sudo install -m0644 archlinux-revoked /usr/share/pacman/keyrings/
          popd
          sudo rm -rf archlinux-keyring
          sudo git clone --depth 1 https://github.com/biglinux/biglinux-keyring.git
          pushd biglinux-keyring
            sudo install -m0644 biglinux.gpg /usr/share/pacman/keyrings/
            sudo install -m0644 biglinux-trusted /usr/share/pacman/keyrings/
            sudo install -m0644 biglinux-trusted /usr/share/pacman/keyrings/
          popd
          sudo rm -rf biglinux-keyring
            
      - name: Update Key
        run: |
          sudo pacman-key --init
          sudo pacman-key --populate archlinux manjaro biglinux
          cp -f /etc/pacman.d/gnupg/pubring.gpg  usr/share/pacman/keyrings/
          cp -f /etc/pacman.d/gnupg/trustdb.gpg  usr/share/pacman/keyrings/
          
      - name: Update github
        run: |
          git add --all
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Update $(date +%Y-%m-%d)"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: install manjaro-chrootbuild
        shell: bash
        env:
          EXTRAREPO: ${{ inputs.extrarepo }}
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/tools/development-tools/manjaro-chrootbuild
          pushd manjaro-chrootbuild
          sudo ./install.sh
          echo 'PACKAGER="BigLinux Package Build <bigbruno@gmail.com>"' | sudo tee -a /etc/makepkg.conf > /dev/null
          popd
          sudo rm -rf manjaro-chrootbuild
          
          #add biglinux repository
          sudo sed -i '/\[core\]/{h;s/.*/\[biglinux-update-stable\]/;p;x;}' /etc/chrootbuild/pacman.conf.x86_64
          sudo sed -i '/\[core\]/{h;s/.*/SigLevel = PackageRequired/;p;x;}' /etc/chrootbuild/pacman.conf.x86_64
          sudo sed -i '/\[core\]/{h;s/.*/Server = https:\/\/repo.biglinux.com.br\/update-stable\/$arch/;p;x;}' /etc/chrootbuild/pacman.conf.x86_64
          sudo sed -i '/\[core\]/{h;s/.*//;p;x;}' /etc/chrootbuild/pacman.conf.x86_64
          echo '
          [biglinux-testing]
          SigLevel = PackageRequired
          Server = https://repo.biglinux.com.br/testing/$arch' | sudo tee -a /etc/chrootbuild/pacman.conf.x86_64
          echo '
          [biglinux-stable]
          SigLevel = PackageRequired
          Server = https://repo.biglinux.com.br/stable/$arch' | sudo tee -a /etc/chrootbuild/pacman.conf.x86_64
          
          sudo sed -i '/-Syy/s/-Syy/-Syy git /' /usr/lib/manjaro-chrootbuild/util-chroot.sh
          
      - name: build package
        shell: bash
        run: |
          # "build package"
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          
          build_opt=("-H" "-p ." "-b stable")
          echo "cmd=chrootbuild ${build_opt[@]}"
          sudo chrootbuild ${build_opt[@]}
          
      - name: sign package
        shell: bash -O extglob {0}
        run: |
          # "Assinar Pacote"
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import &>/dev/null
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          for p in $(find $PWD -maxdepth 1 -regex '.*\.pkg\.tar\.\(xz\|zst\)'); do
            gpg --pinentry-mode loopback --passphrase "${{ secrets.PASSPHRASE }}" --detach-sign ${p}
          done
          
      - name: CheckSum
        shell: bash -O extglob {0}
        run: |
          # "Checksum"
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          echo '#!/bin/bash
          for i in $(ls *.zst); do md5sum $i >> $i.md5; done
          for i in $(ls *.sig | sed 's/.sig//'); do md5sum $i.sig >> $i.md5; done
          exit 0' > md5.sh
          bash md5.sh
          
      - name: Push to Repo
        shell: bash
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          #ssh-agent -a /tmp/ssh_agent.sock > /dev/null
          echo "${{ secrets.PKGBUILD_KEY }}" >> /home/runner/.ssh/github_actions
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/github_actions
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          ls -lh
          if [ -n "$(echo ${{ github.event.client_payload.branch }} | grep stable )" ];then branch=stable; else branch=testing; fi
          for i in *.zst *.sig *.md5; do
          test -e $i && rsync -vapz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.PKGBUILD_DIR }}/$branch
          sleep 10
          done
          exit 0
          
      
